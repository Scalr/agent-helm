apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agent-docker.fullname" . }}
  labels:
    {{- include "agent-docker.labels" . | nindent 4 }}
spec:
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "agent-docker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "agent-docker.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agent-docker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: true
      containers:
        - name: docker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.docker.image.repository }}:{{ .Values.docker.image.tag }}"
          imagePullPolicy: {{ .Values.docker.image.pullPolicy }}
          command: [ dockerd ]
          args:
          - --host=unix:///var/run/docker.sock
          volumeMounts:
          - name: dockersocket
            mountPath: /var/run/
          - name: data
            mountPath: /var/lib/agent-docker
          env:
          - name: DOCKER_HOST
            value: unix:///var/run/docker.sock
          {{- if .Values.extraEnv }}
          {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          env:
          - name: SCALR_AGENT_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SCALR_URL
            value: {{ required ".Values.agent.url must be provided!" .Values.agent.url }}
          - name: SCALR_WORK_DIR
            value: /var/lib/agent-docker
          - name: SCALR_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "agent-docker.name" . }}
                key: token
                optional: false
          livenessProbe:
            exec:
              command:
              - cat
              - /var/lib/agent-docker/.agent.state
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 1
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: dockersocket
            mountPath: /var/run/
          - name: data
            mountPath: /var/lib/agent-docker
      volumes:
      - name: dockersocket
        emptyDir: {}
      - name: data
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
