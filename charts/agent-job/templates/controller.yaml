apiVersion: apps/v1
kind: Deployment
metadata:
  name: "scalr-agent-controller"
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "agent-job.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
spec:
  selector:
    matchLabels:
      {{- include "agent-job.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with (merge (deepCopy .Values.podAnnotations) .Values.controllerPodAnnotations) }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not .Values.agent.tokenExistingSecret }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- end }}
      labels:
        {{- include "agent-job.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agent-job.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      securityContext:
      {{- with .Values.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: SCALR_URL
              value: {{ .Values.agent.url | quote }}
            - name: SCALR_AGENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agent.tokenExistingSecret | default (include "agent-job.name" .) }}
                  key: {{ .Values.agent.tokenExistingSecretKey | default "token" }}
                  optional: false
            - name: SCALR_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SCALR_AGENT_KUBERNETES_MODE
              value: "controller"
            {{- if .Values.efsVolumeHandle }}
            - name: SCALR_AGENT_KUBERNETES_EFS_CLAIM_NAME
              value: "agent-job-efs-claim"
            {{- end }}
            - name: SCALR_AGENT_DATA_DIR
              value: "{{ .Values.agent.dataDir }}"
            - name: SCALR_AGENT_KUBERNETES_JOB_WORKER_ENABLED
              value: "1"
            {{- if .Values.extraEnv }}
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data-dir
              mountPath: "{{ .Values.agent.dataDir }}"
      {{- with .Values.controllerNodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controllerTolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: data-dir
        emptyDir: {}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
